using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class FishMove : MonoBehaviour
{
    public float vitesse = 2f;
    private Vector3 direction;
    private float isStartedFrom = 0f;
    private float animationDiration = 0f;
    private int animationType = 0;
    public GameObject viewField;

    void Start()
    {
        ChooseNewAction();
    }

    void Update()
    {   
        isStartedFrom += Time.deltaTime;
        if (isStartedFrom > animationDiration) {
            ChooseNewAction();
        }
/*        if (IsOutOfScreen())
        {
            //ChooseNewAction();
            Debug.Log("out");
            animationDiration = 0.5f;
            animationType = 2;
            direction = new Vector3(180, 0f, 180);
            transform.Translate(-Vector3.forward * vitesse * Time.deltaTime);
        }*/
        if (animationType == 0)
        {
            transform.Translate(Vector3.forward * vitesse * Time.deltaTime);
        }
        else if (animationType == 1)
        {
            
        }
        else if (animationType == 2)
        {
            animationType = 2;
            transform.rotation = Quaternion.Slerp(transform.rotation, Quaternion.LookRotation(direction), Time.deltaTime * vitesse/2);
        }
    }

    void ChooseNewAction()
    {
        float choice = Random.Range(0, 1f) * 100;
        isStartedFrom = 0f;
        animationDiration = Random.Range(0.25f, 1.5f);

        if (choice <= 50f)
        {
            animationType = 0;
            direction = transform.forward;
            // animationDiration *= 2;
        }
        else if(choice <= 70f)
        {
            animationType = 1;
        }
        else if (choice <= 100f)
        {
           animationType = 2;
           direction = new Vector3(Random.Range(-45f, 45f), 0f, Random.Range(-45f, 45f));//.normalized;
        }   
        //Debug.Log(animationType);
    }

/*    bool IsOutOfScreen()
    {
        Vector3 positionDansMonde = Camera.main.WorldToViewportPoint(transform.position);

        if (positionDansMonde.x < 0 || positionDansMonde.x > 1 || positionDansMonde.y < 0 || positionDansMonde.y > 1)
        {
            return true;
        }

        return false;
    }*/
    void OnTriggerEnter(Collider other)
    {
        if (other.gameObject.CompareTag("Fish") && other.gameObject != gameObject)
        {
            Debug.Log("fish");
            animationDiration = 0.5f;
            animationType = 2;
            direction = new Vector3(180, 0f, 180);
            transform.Translate(-Vector3.forward * vitesse * Time.deltaTime);
        }
        if (other.gameObject.CompareTag("Wall") && other.gameObject != gameObject)
        {
            Debug.Log("Wall");
            animationDiration = 0.5f;
            animationType = 2;
            direction = new Vector3(180, 0f, 180);
            transform.Translate(-Vector3.forward * vitesse * Time.deltaTime);
        }
    }
}
